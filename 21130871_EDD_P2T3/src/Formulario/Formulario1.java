/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulario;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Random;
import java.util.Stack;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author migue
 */
public class Formulario1 extends javax.swing.JFrame {

    /**
     * Creates new form Formulario1
     */
    
    Stack<Integer> pila;
    Queue<Integer> cola;
    public Formulario1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonPush = new javax.swing.JButton();
        jButtonPop = new javax.swing.JButton();
        jButtonMostrarPila = new javax.swing.JButton();
        jButtonCrearPila = new javax.swing.JButton();
        jButtonCrearCola = new javax.swing.JButton();
        jButtonInsertarC = new javax.swing.JButton();
        jButtonEliminarC = new javax.swing.JButton();
        jButtonMostrarCola = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextFieldTama単oP = new javax.swing.JTextField();
        jTextFieldTama単oC = new javax.swing.JTextField();
        jButtonPasarPC = new javax.swing.JButton();
        jButtonIntercambiarPC = new javax.swing.JButton();
        jTextFieldPP = new javax.swing.JTextField();
        jTextFieldPC = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Pila");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Cola");

        jButtonPush.setText("Push");
        jButtonPush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPushActionPerformed(evt);
            }
        });

        jButtonPop.setText("Pop");
        jButtonPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPopActionPerformed(evt);
            }
        });

        jButtonMostrarPila.setText("Mostrar");
        jButtonMostrarPila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarPilaActionPerformed(evt);
            }
        });

        jButtonCrearPila.setText("Crear pila");
        jButtonCrearPila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearPilaActionPerformed(evt);
            }
        });

        jButtonCrearCola.setText("Crear cola");
        jButtonCrearCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearColaActionPerformed(evt);
            }
        });

        jButtonInsertarC.setText("Insertar");
        jButtonInsertarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarCActionPerformed(evt);
            }
        });

        jButtonEliminarC.setText("Eliminar");
        jButtonEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarCActionPerformed(evt);
            }
        });

        jButtonMostrarCola.setText("Mostrar");
        jButtonMostrarCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarColaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Elemento"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButtonPasarPC.setText("Pasar de Pila a Cola");
        jButtonPasarPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasarPCActionPerformed(evt);
            }
        });

        jButtonIntercambiarPC.setText("Intercambiar Ele.");
        jButtonIntercambiarPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIntercambiarPCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTama単oP)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCrearPila, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPush))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTama単oC)
                        .addGap(20, 20, 20)
                        .addComponent(jButtonCrearCola, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonInsertarC)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonPop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonMostrarPila))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonEliminarC)
                        .addGap(1, 1, 1)
                        .addComponent(jButtonMostrarCola)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButtonPasarPC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIntercambiarPC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldPP)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jButtonPush)
                        .addComponent(jButtonPop)
                        .addComponent(jButtonMostrarPila)
                        .addComponent(jButtonCrearPila, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldTama単oP)
                        .addGap(2, 2, 2)))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsertarC)
                    .addComponent(jButtonEliminarC)
                    .addComponent(jButtonMostrarCola)
                    .addComponent(jButtonCrearCola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldTama単oC)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldPP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonPasarPC)
                                .addComponent(jButtonIntercambiarPC)))
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCrearPilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearPilaActionPerformed
        // TODO add your handling code here:
        if(pila == null){
            pila = new Stack();
            JOptionPane.showMessageDialog(this, "La pila ha sido creada");
        }
        else JOptionPane.showMessageDialog(this,"Ya hay una instancia de pila activa");
    }//GEN-LAST:event_jButtonCrearPilaActionPerformed

    private void jButtonPushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPushActionPerformed
        // TODO add your handling code here:
        try{
        Random random = new Random();
        int ctdElementos = Integer.parseInt(jTextFieldTama単oP.getText());
        
        for(int i = 0; i < ctdElementos; i++){
            pila.push(random.nextInt(100));
        }
        
        mostrarPila(pila, jTable1);
        } catch(Exception e){
           JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButtonPushActionPerformed

    private void jButtonMostrarPilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarPilaActionPerformed
        // TODO add your handling code here:
        mostrarPila(pila, jTable1);
    }//GEN-LAST:event_jButtonMostrarPilaActionPerformed

    private void jButtonCrearColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearColaActionPerformed
        // TODO add your handling code here:
        if(cola == null){
            cola = new LinkedList();
            JOptionPane.showMessageDialog(this, "La cola ha sido creada");
        }
        else JOptionPane.showMessageDialog(this,"Ya hay una instancia de cola activa");
    }//GEN-LAST:event_jButtonCrearColaActionPerformed

    private void jButtonInsertarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarCActionPerformed
        // TODO add your handling code here:
        try{
        Random random = new Random();
        int ctdElementos = Integer.parseInt(jTextFieldTama単oC.getText());
        
        for(int i = 0; i < ctdElementos; i++){
            cola.add(random.nextInt(100));
        }
        mostrarCola();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButtonInsertarCActionPerformed

    private void jButtonMostrarColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarColaActionPerformed
        // TODO add your handling code here:
        mostrarCola();
    }//GEN-LAST:event_jButtonMostrarColaActionPerformed

    private void jButtonPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPopActionPerformed
        // TODO add your handling code here:
        pila.pop();
        mostrarPila(pila, jTable1);
    }//GEN-LAST:event_jButtonPopActionPerformed

    private void jButtonEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarCActionPerformed
        // TODO add your handling code here:
        cola.remove();
        mostrarCola();
    }//GEN-LAST:event_jButtonEliminarCActionPerformed

    private void jButtonPasarPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasarPCActionPerformed
        // TODO add your handling code here:
        pasarDePilaACola();
        mostrarPila(pila, jTable1);
        mostrarCola();
    }//GEN-LAST:event_jButtonPasarPCActionPerformed

    private void jButtonIntercambiarPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIntercambiarPCActionPerformed
        // TODO add your handling code here:
       try{
        int posicionP = Integer.parseInt(jTextFieldPP.getText());
        int posicionC = Integer.parseInt(jTextFieldPC.getText());
            
        quitarPilaPonerCola(posicionP, posicionC);
        mostrarPila(pila, jTable1);
        mostrarCola();
       }catch(Exception e){
           JOptionPane.showMessageDialog(this, e);
       }
    }//GEN-LAST:event_jButtonIntercambiarPCActionPerformed

    public void mostrarCola(){
       DefaultTableModel modelo =(DefaultTableModel) this.jTable2.getModel();
        modelo.setColumnCount(cola.size());
        modelo.setRowCount(1);
        
        int aux = 0;
        if(!cola.isEmpty()){
            for(int i=0; i<cola.size(); i++){
                aux=cola.remove();
                this.jTable2.setValueAt(aux, 0, i);
                cola.add(aux);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane,"no hay elementos para mostrar" );
            modelo.setColumnCount(0);
        }
            
    }
    public void mostrarPila(Stack<Integer> pila, JTable tabla){
        DefaultTableModel modelo = (DefaultTableModel)tabla.getModel();
        modelo.setRowCount(pila.size());
        int cont = pila.size();
        
        int num;
        
        int i = 0;
        Stack<Integer> aux = new Stack();
        while(!pila.isEmpty()){
            num = pila.pop();
            tabla.setValueAt(num, i++, 0);
            aux.push(num);
        }
        
        while(!aux.isEmpty()){
            pila.push(aux.pop());
        }
    }
    
    /*
    6.	Un m辿todo para pasar los elementos de la Pila a la Cola y mostrarlos. Se mostrar叩n en la Cola y la Pila quedar叩 vac鱈a.
    */
    
    public void pasarDePilaACola(){
        while(!pila.isEmpty()){
            cola.add(pila.pop());
        }
        invertirCola();
    }
    public void invertirCola(){
        if(cola.size()>=2){
            Stack<Integer> auxPila = new Stack();
            
            while(!cola.isEmpty()){
                auxPila.push(cola.remove());
            }
            
            while(!auxPila.isEmpty()){
                cola.add(auxPila.pop());
            }
        }else
            JOptionPane.showMessageDialog(null, "Se necesitan al menos 2 elementos en la cola)");
            
    }
    
    /*
    7.	Un m辿todo que intercambie un elemento de la Pila de 
        una posici坦n que exista y que sea seleccionada por el
        usuario y lo inserte en una posici坦n de la Cola seleccionada por el 
        usuario.
    */
        public void quitarPilaPonerCola(int posicionP, int posicionC){
            int datoP = pila.get(posicionP);
            Object[] arrCola;
            arrCola = cola.toArray();
            int datoC = Integer.parseInt(arrCola[posicionC].toString());
            
            pila.remove(posicionP);
            
            pila.add(posicionP, datoC);
            quitarYPonerPosicionCola(posicionC, datoP);
        }
        public void quitarYPonerPosicionCola(int pos, int ele){
            Queue<Integer> aux = new LinkedList();
            int n = cola.size();
            int contador = 0;
            
            while(!cola.isEmpty() && contador != pos){
                aux.add(cola.remove());
                contador++;
            }
            cola.remove();
            cola.add(ele);
            while(!aux.isEmpty())
                cola.add(aux.remove());
                
            int k = n - contador - 1;
            while (k-- >0) {
             int p = cola.peek();
            cola.remove();
            cola.add(p);
            }
        }

        public int obtenerElementoCola(int posicion){
        Queue<Integer> auxColaGenerica = new LinkedList();
        int elemento = 0;
        if( posicion > 0 && posicion <= cola.size()){
            for(int i = 1; i <= cola.size(); i++){
                if(i == posicion){
                    elemento = cola.remove();
                }
                else{
                    auxColaGenerica.add(cola.remove());
                }
            }
            
            while(!auxColaGenerica.isEmpty()){
                cola.add(auxColaGenerica.remove());
            }
        }
        return elemento;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCrearCola;
    private javax.swing.JButton jButtonCrearPila;
    private javax.swing.JButton jButtonEliminarC;
    private javax.swing.JButton jButtonInsertarC;
    private javax.swing.JButton jButtonIntercambiarPC;
    private javax.swing.JButton jButtonMostrarCola;
    private javax.swing.JButton jButtonMostrarPila;
    private javax.swing.JButton jButtonPasarPC;
    private javax.swing.JButton jButtonPop;
    private javax.swing.JButton jButtonPush;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldPC;
    private javax.swing.JTextField jTextFieldPP;
    private javax.swing.JTextField jTextFieldTama単oC;
    private javax.swing.JTextField jTextFieldTama単oP;
    // End of variables declaration//GEN-END:variables
}
